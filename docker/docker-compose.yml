version: '3.8'

services:
  rag-evaluation:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    container_name: rag-evaluation-system
    volumes:
      # Mount data directory for persistence
      - ../data:/app/data
      - ../results:/app/results
      # Mount real financial data
      - "../real data:/app/real data:ro"
      # Environment file (create from .env.example)
      - ../.env:/app/.env:ro
    environment:
      - PYTHONPATH=/app/src:/app
      - PYTHONUNBUFFERED=1
      - GRADIO_SERVER_NAME=0.0.0.0
      - GRADIO_SERVER_PORT=7860
    ports:
      - "7860:7860"  # Gradio web interface
    restart: unless-stopped
    networks:
      - rag-network
    depends_on:
      - chromadb

  # ChromaDB for vector storage
  chromadb:
    image: chromadb/chroma:latest
    container_name: rag-chroma
    ports:
      - "8001:8000"
    volumes:
      - chroma_data:/chroma/chroma
    environment:
      - CHROMA_SERVER_HOST=0.0.0.0
      - CHROMA_SERVER_HTTP_PORT=8000
      - ALLOW_RESET=TRUE
    restart: unless-stopped
    networks:
      - rag-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/v1/heartbeat"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Optional: Analysis tools container (for batch processing)
  rag-tools:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    container_name: rag-tools
    volumes:
      - ../data:/app/data
      - ../results:/app/results
      - "../real data:/app/real data:ro"
      - ../.env:/app/.env:ro
    environment:
      - PYTHONPATH=/app/src:/app
      - PYTHONUNBUFFERED=1
    networks:
      - rag-network
    depends_on:
      - chromadb
    profiles:
      - tools  # Only start with --profile tools
    command: ["python", "tools/analyze_rag_vs_non_rag.py"]

volumes:
  chroma_data:
    driver: local

networks:
  rag-network:
    driver: bridge
